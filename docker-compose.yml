version: "2.2"
services:
  #PHP Service
  app:
    build:
      args:
        user: sammy
        uid: 1000
      context: ./
      dockerfile: Dockerfile
    image: travellist
    container_name: travellist-app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
    depends_on:
      - db
      - redis
      # - nodejs
    # networks:
    #   - travellist

  #MySQL Service
  db:
    image: mysql:5.7
    container_name: travellist-db
    restart: always
    environment:
      MYSQL_DATABASE: socialNetworkAnLab
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./docker-compose/mysql:/docker-entrypoint-initdb.d
    # networks:
    #   - travellist

  #Nginx Service
  nginx:
    image: nginx:alpine
    container_name: travellist-nginx
    restart: unless-stopped
    ports:
      - 8000:80
    volumes:
      - ./:/var/www
      - ./docker-compose/nginx:/etc/nginx/conf.d/
    # networks:
    #   - travellist

  # Redis Service
  redis:
    image: redis:5-alpine
    container_name: docker-redis
    volumes:
      - .docker/data/redis:/data
    restart: unless-stopped
    ports:
      - 6380:6379

  # NodeJs server with Socket.io
  # nodejs:
  #   build:
  #     context: .docker/NodeJS
  #     dockerfile: Dockerfile
  #   volumes:
  #     - .env:/app/.env
  #   restart: unless-stopped
    # networks:
    #   - travellist

  # DB UI management service
  adminer:
    image: adminer
    restart: unless-stopped
    ports:
      - ${ADMINER_PORT}:8080
    depends_on:
      - db

# networks:
#   travellist:
#     driver: bridge
